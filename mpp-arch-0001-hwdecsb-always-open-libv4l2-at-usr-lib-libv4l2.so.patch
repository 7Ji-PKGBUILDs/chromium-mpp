From 137a27a3e4724a1308c9986b32003b0841d4d844 Mon Sep 17 00:00:00 2001
From: 7Ji <pugokushin@gmail.com>
Date: Fri, 29 Dec 2023 16:02:31 +0800
Subject: [PATCH] hwdecsb: always open libv4l2 at /usr/lib/libv4l2.so

By default, libv4ls is looked up at /usr/lib64/libv4l2.so when system is 64bit,
and is looked up at /usr/lib/libv4l2.so when not, this meets the Debian/RH file
system hierarchy, but not the Arch FSH, as we always store native libraries
under /usr/lib, regardless of the bitness of the native userspace.

Changing the lookup path to always /usr/lib/libv4l2.so

Solve the runtime dlopen errors regarding to rkmpp
---
 .../gpu/sandbox/hardware_video_decoding_sandbox_hook_linux.cc | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/media/gpu/sandbox/hardware_video_decoding_sandbox_hook_linux.cc b/media/gpu/sandbox/hardware_video_decoding_sandbox_hook_linux.cc
index 3133607..9717298 100644
--- a/media/gpu/sandbox/hardware_video_decoding_sandbox_hook_linux.cc
+++ b/media/gpu/sandbox/hardware_video_decoding_sandbox_hook_linux.cc
@@ -154,11 +154,7 @@ bool HardwareVideoDecodingPreSandboxHookForV4L2(
   // Some platforms (RK3399) need libv4l2 to interact with the kernel V4L2
   // driver, so we need to load that library prior to entering the sandbox.
 #if BUILDFLAG(USE_LIBV4L2)
-#if defined(__aarch64__)
-  dlopen("/usr/lib64/libv4l2.so", RTLD_NOW | RTLD_GLOBAL | RTLD_NODELETE);
-#else
   dlopen("/usr/lib/libv4l2.so", RTLD_NOW | RTLD_GLOBAL | RTLD_NODELETE);
-#endif  // defined(__aarch64__)
 #endif  // BUILDFLAG(USE_LIBV4L2)
   return true;
 #else
-- 
2.43.0

